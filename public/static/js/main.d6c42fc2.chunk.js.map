{"version":3,"sources":["lib/btcTransactions.js","lib/constants.js","../node_modules/@stacks/connect-ui/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","lib/auth.js","pages/Landing.js","components/Auth.js","lib/memberlist.js","components/Address.js","lib/stackingState.js","components/Amount.js","components/DelegationState.js","components/StackingStatus.js","components/TxStatus.js","components/SubmitRewardTx.js","App.js","index.js"],"names":["wasTxMined","blockPartsCV","txCV","proofCV","a","callReadOnlyFunction","contractAddress","CLARITY_BITCOIN_CONTRACT","address","contractName","name","functionName","functionArgs","senderAddress","CONTRACT_ADDRESS","network","NETWORK","result","console","log","cvToString","numberToBuffer","value","size","buf","Buffer","allocUnsafe","writeIntLE","slice","txForHash","tx","Transaction","fromHex","__toBuffer","undefined","toString","paramsFromTx","btcTxId","stxHeight","fetch","json","out","outputs","bufferCV","MerkleTree","bufferify","hex","txPartsCV","tupleCV","version","from","substr","ins","listCV","inputs","map","input","script_type","outpoint","hash","reverse","prev_hash","index","output_index","scriptSig","script","sequence","outs","output","scriptPubKey","locktime","length","stacksBlockHash","data_hex","stacksBlockResponse","stacksBlock","height","block_hash","blockResponse","blockFirstPart","txCount","n_tx","block","txids","response","blockNextPart","concat","txidsLength","headerResponse","text","header","txIndex","findIndex","id","tree","SHA256","isBitcoinTree","treeDepth","getDepth","proof","getProof","getHexProof","print","uintCV","hashes","po","data","blockCV","headerParts","headerPartsCV","parent","timestamp","nbits","nonce","FRIEDGER_POOL_NFT","FRIEDGER_POOL_HINTS","FPWR_CONTRACT","authOrigin","chainSuffix","STACK_API_URL","STACKS_API_WS_URL","StacksMainnet","coreApiUrl","config","Configuration","basePath","smartContractsApi","AccountsApi","SmartContractsApi","transactionsApi","TransactionsApi","InfoApi","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports","appConfig","AppConfig","userSessionState","atom","UserSession","userDataState","authResponseState","useConnect","useAtom","userSession","setUserData","useUpdateAtom","setAuthResponse","onFinish","payload","authResponse","loadUserData","userData","authOptions","redirectTo","manifestPath","appDetails","icon","handleOpenAuth","showConnect","handleSignOut","useCallback","signUserOut","Landing","props","className","type","onClick","Auth","isUserSignedIn","initialMembers","Address","addr","title","ownerStxAddress","getContractDataMapEntry","mapName","key","cvToHex","stacker","standardPrincipalCV","mapEntry","hexToCV","ClarityType","OptionalNone","state","Amount","ustx","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","DelegationState","delegationState","href","StackingStatus","stackingStatus","stacked","details","amount_microstx","first_reward_cycle","lock_period","TxStatus","txId","resultPrefix","useState","loading","processingResult","setProcessingResult","spinner","useRef","useEffect","sub","current","classList","remove","update","connectWebSocketClient","client","subscribeTxUpdates","subscribe","event","tx_status","getTransactionById","tx_result","startsWith","add","unsubscribe","normalizedTxId","target","rel","repr","ref","role","SubmitRewardTx","doContractCall","useStacksJsConnect","txidRef","txid","setTxid","setLoading","changed","setChanged","verifyAction","trim","all","results","r","submitAction","postConditionMode","PostConditionMode","Deny","postConditions","anchorMode","AnchorMode","Any","onCancel","model","placeholder","App","isSignInPending","handlePendingSignIn","stxAddress","profile","mainnet","display","justifyContent","Content","authenticated","decentralizedID","stxOwnerAddress","status","setStatus","setTxId","setStackingStatus","suggestedAmount","setSuggestedAmount","currentReceiver","setCurrentReceiver","claimableNftOwner","setClaimableNftOwner","setDelegationState","amountRef","receiverRef","claimableNftIndex","m","StackingClient","getStatus","s","Math","max","floor","fetchDelegationState","getOwnerResult","OptionalSome","cv","claimNFT","amount","parseInt","makeStandardSTXPostCondition","FungibleConditionCode","Equal","BN","finished","changeRewardReceiver","receiver","receiverParts","split","receiverCV","contractPrincipalCV","width","src","alt","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c42fc2.chunk.js","sourcesContent":["import {\n  bufferCV,\n  callReadOnlyFunction,\n  cvToString,\n  listCV,\n  tupleCV,\n  uintCV,\n} from '@stacks/transactions';\nimport MerkleTree from 'merkletreejs';\nimport reverse from 'buffer-reverse';\nimport SHA256 from 'crypto-js/sha256';\nimport { Transaction } from 'bitcoinjs-lib';\n\nimport {\n  CLARITY_BITCOIN_CONTRACT,\n  CONTRACT_ADDRESS,\n  NETWORK,\n} from './constants';\n\nexport async function getReversedTxId(txCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n\n    functionName: 'get-reversed-txid',\n    functionArgs: [txCV],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('getReversedTxId', cvToString(result));\n  return result;\n}\n\n\nexport async function concatTransaction(txPartsCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'concat-tx',\n    functionArgs: [txPartsCV],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('concat-tx', cvToString(result));\n  return result;\n}\n\nexport async function getTxId(txBuffCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'get-txid',\n    functionArgs: [txBuffCV],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('txid', cvToString(result));\n  return result;\n}\n\nexport async function wasTxMined(blockPartsCV, txCV, proofCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'was-tx-mined',\n    functionArgs: [blockPartsCV, txCV, proofCV],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('was-tx-mined', cvToString(result));\n  return result;\n}\n\nexport async function parseTx(txCV) {\n  // parse tx\n  try {\n    const result = await callReadOnlyFunction({\n      contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n      contractName: CLARITY_BITCOIN_CONTRACT.name,\n      functionName: 'parse-tx',\n      functionArgs: [txCV],\n      senderAddress: CONTRACT_ADDRESS,\n      network: NETWORK,\n    });\n    console.log('parse-tx', cvToString(result));\n  } catch (e) {\n    console.log('parse-tx failed', e.toString());\n  }\n}\n\nexport async function verifyMerkleProof(txId, block, proofCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'verify-merkle-proof',\n    functionArgs: [\n      bufferCV(reverse(MerkleTree.bufferify(txId))),\n      bufferCV(reverse(MerkleTree.bufferify(block.mrkl_root))),\n      proofCV,\n    ],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('verify-merkle-proof', JSON.stringify(result), cvToString(result));\n  return result;\n}\n\nexport async function verifyMerkleProof2(txCV, blockCV, proofCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'verify-merkle-proof',\n    functionArgs: [\n      await getReversedTxId(txCV),\n      blockCV.data[\"merkle-root\"],\n      proofCV,\n    ],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('verify-merkle-proof-2', JSON.stringify(result), cvToString(result));\n  return result;\n}\n\nexport async function wasTxMinedFromHex(blockCV, txCV, proofCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'was-tx-mined-compact',\n    functionArgs: [blockCV, txCV, proofCV],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('was-tx-mined-compact', JSON.stringify(result));\n  return result;\n}\n\nexport async function parseBlockHeader(blockHeader) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n\n    functionName: 'parse-block-header',\n    functionArgs: [bufferCV(Buffer.from(blockHeader, 'hex'))],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('parse block header', cvToString(result.value.data['merkle-root']));\n  return result;\n}\n\nexport async function verifyBlockHeader(parts, blockHeight) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'verify-block-header',\n    functionArgs: [\n      bufferCV(Buffer.from(parts[0] + parts[1] + parts[2] + parts[3] + parts[4] + parts[5], 'hex')),\n      uintCV(blockHeight),\n    ],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('verify-block-header', cvToString(result));\n  return result;\n}\n\nexport async function verifyBlockHeader2(blockCV) {\n  const result = await callReadOnlyFunction({\n    contractAddress: CLARITY_BITCOIN_CONTRACT.address,\n    contractName: CLARITY_BITCOIN_CONTRACT.name,\n    functionName: 'verify-block-header',\n    functionArgs: [\n      blockCV.data[\"header\"],\n      blockCV.data[\"height\"],\n    ],\n    senderAddress: CONTRACT_ADDRESS,\n    network: NETWORK,\n  });\n  console.log('verify-block-header-2', cvToString(result));\n  return result;\n}\n\nfunction numberToBuffer(value, size) {\n  // increase size by 1 for \"too large\" numbers\n  const buf = Buffer.allocUnsafe(size + 1);\n  buf.writeIntLE(value, 0, size + 1);\n  // remove the extra byte again\n  return buf.slice(0, size);\n}\n\n// return something like this\n// \"0200000001fbfaf2992b0ec1c24b237c7c8a8e6dfee0d19d18544e76cfa3e6ae4d20d7e2650000000000fdffffff02d8290800000000001976a914dd2c7d66ea6df0629fc222929311d0eb7d9146b588ac42a14700000000001600142a551add041ec0ffd755b5a993afa7a11ca59b0b1a900a00\"\n// without witness\nfunction txForHash(tx) {\n  const transaction = Transaction.fromHex(tx)\n  return transaction.__toBuffer(undefined, undefined, false).toString(\"hex\")\n}\n\nexport async function paramsFromTx(btcTxId, stxHeight) {\n  const tx = await (\n    await fetch(`https://api.blockcypher.com/v1/btc/main/txs/${btcTxId}?limit=50&includeHex=true`)\n  ).json();\n\n  console.log({ out: tx.outputs[0] });\n\n  // tx hex without witness\n  const txCV = bufferCV(MerkleTree.bufferify(txForHash(tx.hex)));\n\n  // tx decomposed\n  const txPartsCV = tupleCV({\n    version: bufferCV(Buffer.from(tx.hex.substr(0, 8), 'hex')),\n    ins: listCV(\n      tx.inputs.map(input => {\n        console.log(input.script_type);\n        if (input.script_type === 'pay-to-pubkey-hash') {\n          return tupleCV({\n            outpoint: tupleCV({\n              hash: bufferCV(reverse(Buffer.from(input.prev_hash, 'hex'))),\n              index: bufferCV(numberToBuffer(input.output_index, 4)),\n            }),\n            scriptSig: bufferCV(Buffer.from(input.script, 'hex')),\n            sequence: bufferCV(numberToBuffer(input.sequence, 4)),\n          });\n        } else {\n          return tupleCV({\n            outpoint: tupleCV({\n              hash: bufferCV(reverse(Buffer.from(input.prev_hash, 'hex'))),\n              index: bufferCV(numberToBuffer(input.output_index, 4)),\n            }),\n            scriptSig: bufferCV(Buffer.from(\"\", 'hex')),\n            sequence: bufferCV(numberToBuffer(input.sequence, 4)),\n          });\n        }\n      })\n    ),\n    outs: listCV(\n      tx.outputs.map(output =>\n        tupleCV({\n          scriptPubKey: bufferCV(Buffer.from(output.script, 'hex')),\n          value: bufferCV(numberToBuffer(output.value, 8)),\n        })\n      )\n    ),\n    locktime: bufferCV(Buffer.from(tx.hex.substr(tx.hex.length - 8), 'hex')),\n  });\n\n  let height;\n  let stacksBlock;\n  if (!stxHeight) {\n    const stacksBlockHash = tx.outputs[0].data_hex.substr(6, 64);\n    const stacksBlockResponse = await fetch(\n      `https://stacks-node-api.mainnet.stacks.co/extended/v1/block/0x${stacksBlockHash}`\n    );\n    stacksBlock = await stacksBlockResponse.json();\n    height = stacksBlock.height;\n  } else {\n    const stacksBlockResponse = await fetch(\n      `https://stacks-node-api.mainnet.stacks.co/extended/v1/block/by_height/${stxHeight}`\n    );\n    stacksBlock = await stacksBlockResponse.json();\n    height = stxHeight;\n  }\n  console.log({ height, stacksBlock });\n\n  const blockResponse = await fetch(\n    `https://api.blockcypher.com/v1/btc/main/blocks/${tx.block_hash}?limit=500`\n  );\n  const blockFirstPart = await blockResponse.json();\n  const txCount = blockFirstPart.n_tx;\n  let block = blockFirstPart;\n  while (block.txids.length < txCount) {\n    const response = await fetch(\n      `https://api.blockcypher.com/v1/btc/main/blocks/${tx.block_hash}?limit=500&txstart=${block.txids.length}`\n    );\n    const blockNextPart = await response.json();\n    block.txids = block.txids.concat(blockNextPart.txids);\n    console.log({ txidsLength: block.txids.length });\n  }\n\n  const headerResponse = await fetch(`https://blockstream.info/api/block/${tx.block_hash}/header`);\n  const header = await headerResponse.text();\n\n  // proof cv\n  const txIndex = block.txids.findIndex(id => id === btcTxId);\n  const tree = new MerkleTree(block.txids, SHA256, { isBitcoinTree: true });\n  const treeDepth = tree.getDepth();\n  const proof = tree.getProof(btcTxId, txIndex);\n  console.log({ proof }, tree.getHexProof(btcTxId, txIndex));\n  console.log(tree.print());\n  const proofCV = tupleCV({\n    'tx-index': uintCV(txIndex),\n    hashes: listCV(proof.map(po => bufferCV(reverse(po.data)))),\n    'tree-depth': uintCV(treeDepth),\n  });\n  console.log({ txIndex, treeDepth, tree, hashes: proofCV.data.hashes });\n  // block header\n  const blockCV = tupleCV({\n    header: bufferCV(Buffer.from(header, 'hex')),\n    height: uintCV(height),\n  });\n\n  // block parts\n  const headerParts = [\n    header.substr(0, 8),\n    header.substr(8, 64),\n    header.substr(72, 64),\n    header.substr(136, 8),\n    header.substr(144, 8),\n    header.substr(152, 8),\n  ];\n\n  const headerPartsCV = tupleCV({\n    version: bufferCV(Buffer.from(headerParts[0], 'hex')),\n    parent: bufferCV(Buffer.from(headerParts[1], 'hex')),\n    'merkle-root': bufferCV(Buffer.from(headerParts[2], 'hex')),\n    timestamp: bufferCV(Buffer.from(headerParts[3], 'hex')),\n    nbits: bufferCV(Buffer.from(headerParts[4], 'hex')),\n    nonce: bufferCV(Buffer.from(headerParts[5], 'hex')),\n    height: uintCV(height),\n  });\n  return {\n    txCV,\n    txPartsCV,\n    proofCV,\n    block,\n    blockCV,\n    header,\n    headerParts,\n    headerPartsCV,\n    stacksBlock,\n  };\n}\n","import {\n  TransactionsApi,\n  SmartContractsApi,\n  AccountsApi,\n  Configuration,\n  InfoApi,\n} from '@stacks/blockchain-api-client';\nimport { StacksMainnet } from '@stacks/network';\n\nexport const CONTRACT_ADDRESS = 'SP1K1A1PMGW2ZJCNF46NWZWHG8TS1D23EGH1KNK60';\nexport const POOL_REGISTRY_CONTRACT_NAME = 'pool-registry-v1';\nexport const GENESIS_CONTRACT_ADDRESS = 'SP000000000000000000002Q6VF78';\nexport const BNS_CONTRACT_NAME = 'bns';\nexport const FRIEDGER_POOL_NFT = {\n  address: 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9',\n  name: 'friedger-pool-nft',\n};\nexport const FRIEDGER_POOL_HINTS = {\n  address: 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9',\n  name: 'friedgerpool-payout-hints',\n};\nexport const CLARITY_BITCOIN_CONTRACT = {\n  address: 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9',\n  name: 'clarity-bitcoin-lib-v1',\n};\n\nexport const FPWR_CONTRACT = {\n  address: 'SP1JSH2FPE8BWNTP228YZ1AZZ0HE0064PS6RXRAY4',\n  name: 'fpwr-v0',\n};\n\nexport const authOrigin = 'https://app.blockstack.org';\nexport const chainSuffix = \"?chain=mainnet\"\nexport const STACK_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\nexport const STACKS_API_WS_URL = 'ws://stacks-node-api.mainnet.stacks.co/';\nexport const STACKS_API_ACCOUNTS_URL = `${STACK_API_URL}/v2/accounts`;\n\nexport const NETWORK = new StacksMainnet();\nNETWORK.coreApiUrl = STACK_API_URL;\n\nconst basePath = STACK_API_URL;\nconst config = new Configuration({ basePath });\nexport const accountsApi = new AccountsApi(config);\nexport const smartContractsApi = new SmartContractsApi(config);\nexport const transactionsApi = new TransactionsApi(config);\nexport const infoApi = new InfoApi(config);\n","var map = {\n\t\"./connect-modal.entry.js\": [\n\t\t832,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 722;\nmodule.exports = webpackAsyncContext;","import { useCallback } from 'react';\nimport { AppConfig, UserSession } from '@stacks/connect-react';\nimport { showConnect } from '@stacks/connect';\nimport { authOrigin } from './constants';\nimport { atom, useAtom } from 'jotai';\nimport { useUpdateAtom } from 'jotai/utils';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\nexport const userSessionState = atom(new UserSession({ appConfig }));\nexport const userDataState = atom();\nexport const authResponseState = atom();\n\nexport const useConnect = () => {\n  const [userSession] = useAtom(userSessionState);\n  const setUserData = useUpdateAtom(userDataState);\n  const setAuthResponse = useUpdateAtom(authResponseState);\n\n  const onFinish = async payload => {\n    setAuthResponse(payload.authResponse);\n    const userData = await payload.userSession.loadUserData();\n    setUserData(userData);\n  };\n\n  const authOptions = {\n    authOrigin: authOrigin,\n    onFinish,\n    userSession, // usersession is already in state, provide it here\n    redirectTo: '/',\n    manifestPath: '/manifest.json',\n    appDetails: {\n      name: 'Friedger Pool Members',\n      icon: 'https://pool.friedger.de/img/logo.png',\n    },\n  };\n\n  const handleOpenAuth = () => {\n    showConnect(authOptions);\n  };\n\n  const handleSignOut = useCallback(() => {\n    userSession?.signUserOut('/');\n  }, [userSession]);\n\n  return { handleOpenAuth, handleSignOut, authOptions };\n};\n","import React from 'react';\nimport { useConnect } from '../lib/auth';\n\n// Landing page demonstrating Blockstack connect for registration\n\nexport default function Landing(props) {\n  const { handleOpenAuth } = useConnect();\n\n  return (\n    <div className=\"Landing\">\n      <div className=\"jumbotron jumbotron-fluid pt-3 mb-0\">\n        <div className=\"container\">\n          <div className=\"panel-landing text-center mt-3\">\n            <p className=\"lead\">Enjoy the exclusive Friedger Pool membership!</p>\n            <p className=\"card-link mb-5\">\n              <button className=\"btn btn-outline-primary\" type=\"button\" onClick={handleOpenAuth}>\n                Start now\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useConnect, userSessionState } from '../lib/auth';\nimport { useAtom } from 'jotai';\n// Authentication button adapting to status\n\nexport default function Auth() {\n  const { handleSignOut } = useConnect();\n  const [userSession] = useAtom(userSessionState);\n\n  if (userSession?.isUserSignedIn()) {\n    return (\n      <button\n        className=\"btn btn-primary btn-lg\"\n        onClick={() => {\n          console.log('signOut');\n          handleSignOut();\n        }}\n      >\n        Log Out\n      </button>\n    );\n  } else {\n    return null;\n  }\n}\n","export const initialMembers = [\n    'SP103VXJR1E4KHSF19KKDXN1BNAG3HHRMD5QWDCNY',\n    'SP1049B6SW0W3ZH4TQDGWPPVARFHCHM3MFZ89MHG5',\n    'SP107ENYMVJ2YN23E0YZJ1DC28YX0KAFRWQ2XR0R',\n    'SP108W069Y9R0GZS67CPH1WM5G96BX0NB60335GQ3',\n    'SP10SDYWM9JSP6NGRP8VJKD98ZVGWMFJKECSNBDKC',\n    'SP11EZAAA9HD45A3N763QZDJ3BQ3VMJER5AXA7YRJ',\n    'SP11GJVQTMN2ECK740M36Q7TR8JPCGPGE4MSB3EDZ',\n    'SP1293BDR2HFT5SS1MET8Y1QNCAPM2Q171C0H1GP4',\n    'SP12B127ZFK123WNKMZ7CYP8S42BV4T3SQ2TVYVGX',\n    'SP12Q5VPEFGG0307Z88DQMQ4NNWG4CDNYNQXYP0MZ',\n    'SP1308DQKXZK593BES4GV419HMM3X94MM3TSVFA88',\n    'SP13NXPSHAQ5PHS4EZ55DEF0HCXVF263B72G8NKQR',\n    'SP15RF9ZKWJARCMMYDN26Z54X5ZX96AHABTV7QTNC',\n    'SP1688J09PXA3NFCEAMFSPQDT4QEHP8KJH7SB7DF6',\n    'SP17DGYKZ8GKW8TRKE53WE6B0MVEZGXZQWRGS6SGM',\n    'SP17PF38015BBJ5YZ8B2PR3BV8HVDTG1A6QXFXM6S',\n    'SP17RJTW2FERBBRBC0HQH70BDQETKT76C2QRCAAS4',\n    'SP18DC9K6VVB5XV33G122M2GHM208129TWJGZHR6H',\n    'SP1A86KRVMMXD3QFXRWHWKNAEW07A6KTDX21SK40F',\n    'SP1A8V2HEF1AT2J9V2WR9TX1YYVC35AR72H8BP3ND',\n    'SP1A967GSS8V1HCGQWTWDHFRQP51K1Z7S8CA4YJYR',\n    'SP1B8HKPVCTYS6C1G24F0EJDSCJWQXHX1PE174DNS',\n    'SP1B9JYW7Y85HN0P3N9RV3YFEFVTS86HHH3NCERKR',\n    'SP1BAX9KPKTC3RQ9ESACK2R5G63F23FDRQS1ZXQTH',\n    'SP1C0J8MDSQ67N2AADXTTDKM8SAR1JV3VY8DS25RG',\n    'SP1CMQEFW3QSJDYWFH3SG0K874CM2QDGEM5A9V1XC',\n    'SP1D2P4A6EV88CNSKFN9JHXMZ5PN9YQRKBNXBEKA8',\n    'SP1DM5S40X3N3HEK00HB3CJN67SY4HDPR2KDE13G4',\n    'SP1E5KVXXSSBT5D3ZRBPCT33PNR9EDEN5341XGQ70',\n    'SP1E7GSFHYDKGT41M68CQQWR73WDERJTNRFCC7T53',\n    'SP1E8WR5K6N2JQ8QCP8R6R3QBK976SM8NDF03W5W8',\n    'SP1FGAMEV4EMJF4T0PNZQPK3KRPYTFW66C5T9KS00',\n    'SP1FHYQG70GCZNGQ23X43KBQZ5WJE1Y3XKZGQAK8P',\n    'SP1FPS1V79YTKQ770V3BG18SC8FHQKTV64M70AKNA',\n    'SP1FSM1D5VE0P232KCZZMN939BDFVRXK69VQTE02K',\n    'SP1FVCEX9N4DPMKMC36H3ND70ECA3ZQ1WFN649R58',\n    'SP1FVKRANHMSTZ21V69MVBTMBFSV9MK8SBFQTR5YV',\n    'SP1GJHYSBB9NK9AKRXY1KH50F92N7KVJ27P0EBBMT',\n    'SP1HC79YHX9FT5RF4BSJ2GC9X8KE1P9BGWWX4M1E',\n    'SP1HHSDYJ0SGAM6K2W01ZF5K7AJFKWMJNH365ZWS9',\n    'SP1HSYYPNP7T5KHB77A0WTTVGJHC437P3S9JSCT7Y',\n    'SP1JDEDC843A9TV7D8QQAXDHZPFMNDFB4RPDAF2Y1',\n    'SP1JKSPWGTVNPG9F1MTSPECP41DX0VZJ1PARRHAHV',\n    'SP1JX2RYKPR0G7H81SQHZQ187H50RR6QSM8GX839X',\n    'SP1K7DH646HPNRG8K4S5PJDCVDYTBHN94M9PCJVZ4',\n    'SP1KNEK5YSG6802NXPYJMPH95F3F8SBXBFB5P9KHE',\n    'SP1KWF0R26EJ73WNAPD5STZJ5V2WK1W5C0S946HS7',\n    'SP1M1ATHN7NP5ZNFKE4Q53JR7P6FAZT76AJ2VVYXX',\n    'SP1MPA5WC328JC7A0YRA3VJ7MMYBE8TDPRKG70KXM',\n    'SP1NB012JS7TR1QNS03G3VC2CEWRFTYC96QCKBSDC',\n    'SP1NQ5AS213JFGAS78MF6BPRZ4Z6TENR59K96M67W',\n    'SP1NZMY10ARMS3GNFF4SPQ7G54HVG0SCEP8QY5VQ3',\n    'SP1QKTT2VZ7HF8P1BCPGA1KR2AJT4QY5YRP35DP4E',\n    'SP1R17F8XGZHTDEF4FZYFRG31DWXCENQZDJ7FB58N',\n    'SP1RNGRKSRP8ZQ1BGQ2K5PZKJZHC7MBSQ8GTYNTTV',\n    'SP1RTKESDRGCMMPQAW15RSYSTRJW16PB0M2RNVA58',\n    'SP1RVFT87PV10WKF2Y5TV1MBC12PV7FK736MNX93K',\n    'SP1RW26AHWCMHS21T3AZ6HVSQGNVMHZY8H1VSAQMC',\n    'SP1S4C6Q6Z89EEVG84M1NG51M1W2A4FTMAK2XNBQ2',\n    'SP1SMP58BHC80PKVRKPYDB6JSGKQDG8XKTAYSZWX9',\n    'SP1SNJK0KQGTTJ14HQC0CJHRVDWDEFXYMN5QY7JNC',\n    'SP1SYCZ2V2EKJCDTS5HBDR1ZJNSYFFPW00EJ1BBPM',\n    'SP1T0NKGCAZZKCKNVMAW60DDZ9QC5XAD8C4QDD3PP',\n    'SP1VDP51TS04PWRK4DBPY64T8M1GY85Q1QX8WDVFN',\n    'SP1VSF9NRDSDN4TNZH592D10TNNSDG46NKMYMS8D6',\n    'SP1VV9EB6Y90MJXTM7TRMNPDDE8D4ST44RCHMR325',\n    'SP1WYA0HCHQWBEDQK7XEJ16ZZQQTP8AQ15A9ER89S',\n    'SP1X8BQY6X6CPX1EKYCH2P0BB7TDFDWP79GV5KKAF',\n    'SP1Y5XE7M77F51NQ1497BCAX34DF2ZHB77E1QK4NQ',\n    'SP1YT9M182DVK1VEZ66490TYFN7XMAD0Z9XX8JCPW',\n    'SP1YVF9EWSK6HM0JZR4B3KCM7V3NKVE18VVNFSQV5',\n    'SP20B4E0WVN52BR33XHEB27RS5P2PEA4FSYYD2SZM',\n    'SP20YBF80C3TZ2YRMF3833WZ8RSPHVBVVNNG1GKKN',\n    'SP218FDH2QJS7E0FM6VC6RNW8QWYPBDNEXQ5MBEES',\n    'SP21EDJ8H8DZMJNW4X807BZHK4V45391N986YSHQ7',\n    'SP21SKQASJP2QZPHRNTA78Z80JHS449FAFRD63HKA',\n    'SP222A8XAM81EF2ZZQ0RKNDR7VVHH7Q8XT85CH0VJ',\n    'SP230QYRFBT9JFB92PKVH85CVRX6CFVZ30JSJF3DC',\n    'SP23E1ZQAFFASNS8XT39E8Z3J41066J7772FWMQ9M',\n    'SP23FQFEZFPXM2Z5W2G35BRSH35V0F7GK1D687YE3',\n    'SP24N8JGBX4K92CMNAX7GWK9EVRNWZXDR86RRA31F',\n    'SP24NWB63GRT2ZP7M5Z2RNTVM684VBZTK5JV71R8F',\n    'SP24PGY8669GS60DZ2W1FNPVNVF7AZC61PJ8K5A77',\n    'SP24SXE40FCBG37KJ7C538XVX1H7TG17EGVWAV175',\n    'SP25477FQ84PAGZREMN49B3074GV8JP7M8MG3DP0C',\n    'SP25PQFXE65NYFF5NA8DMT4VAF553NGSWQW3PPYXX',\n    'SP25QK8T5PS6J8YJYTYX5FEMP6TRPKRYDSMCK0QH3',\n    'SP25TW9BZNNBW1MQX5NHNCGSXEFBP98B2R320V4SF',\n    'SP25X4TZBD3GFAZ6ER897QXJ318SBEPT9RCTM03BS',\n    'SP261E27GD1WXDESWE8MDVZJBT42623FP21DXA3TK',\n    'SP28KBPAWDP4R892MWPVNF481XSS46EZ8REK3ZTA6',\n    'SP28MCFE8VCD903NTJXSE4QY6EQNVXKDBVMV3NC09',\n    'SP294GG6MJJCHZ2BDV5PTMPK93MGYB2CY9VV5GG6D',\n    'SP29BSG7A2R7M9KA6FCHBCWPSX9WXVDY4FATDCRY2',\n    'SP29M8K1E5TRG6MVKYC5MT6QDN9AWY7DQ82EM1AS',\n    'SP2A82Q7YZJBKKT6BHD5JXPVZZ9WDRA9AAFTNZGE1',\n    'SP2A8WC1GJAZYC5BPYDAYXJHYVNQ12AQZC3TSN4DF',\n    'SP2AFGFVV2TY4BXTJV1BTNJSD43DR636FBDYB8P5N',\n    'SP2AGMMPZNA8RHQZ93GQJVBA33W1HX4SXJSYV1HQN',\n    'SP2ANHK7PQDGRMT6XRCPMFD8HHYJFVN797SCBHCTH',\n    'SP2ATAXKC65DVKB3M8VY21XXT72PEBX32V0ZKVBW3',\n    'SP2B3CVHPVWAPDGE7ZF4329QY2RNJC2W88WVN95P7',\n    'SP2B4M6D4NBEJDDAX22SS34MEPJPPJ3T920V7RHYE',\n    'SP2BJMEZZCQ287AGFSA4F4JMQ3ZT8XWJ1K8MT169C',\n    'SP2C2070RGTNA22MNQ5S2GDWJYRMJ4F14MVVE0D9Z',\n    'SP2CXVC7F2XKS03MZA5R8J5EQVWNJHHKDARHVKM6G',\n    'SP2DR2WX4965VHW718QJ4PVAEQACC5TJ91MZXM4DN',\n    'SP2DSNT2MEDDYGH1N2824R7N46K2BGJR0QD4QNS4W',\n    'SP2DVH2MW7PR0Y4KF13SR1MMB6J25HTXPYZ5E8EAT',\n    'SP2FEMNG1BR42KJZQAV6Z46ZZYSWBRJDR2RGG76SP',\n    'SP2FF97QHVJPRPVJ7D067Q666DHS05AJT3N2F3MY3',\n    'SP2FJ3GKA3KGTDZG27QGSFATKFVXQWQN01Z49W1Q7',\n    'SP2G9DKTV27XF0BWK23BRR6RPRA9KDJCZFTWQSBA6',\n    'SP2GA0B2HMKNV9GKFGGPTKWJHJ8TEYFBVMTC9FX6W',\n    'SP2GVFTC6NVTQK00CV01WXR7YVEVCD49VS7RY0779',\n    'SP2H95PWNF5W2RY4902DF6X1RRW50KHJMXJK41T2P',\n    'SP2J5R9HKKSK6QSGFYZJABQ02P8NC62HVBG97V8D5',\n    'SP2JBZAZZEXKVZF9XWZ5FGS6BHFA4SC13E69EHFVT',\n    'SP2JD4PPMC1BCAMBPZT8F3DF51CGW4VA9FAE5T3JG',\n    'SP2KDXW27EKC5TFFDTDY06NDH8JZJXAYJBGNJB5CM',\n    'SP2KQAENGPF9C7NM3QQVT7CBEZTGGKBW3KPKWBK93',\n    'SP2MANB3ZJ6BE6QC6YK6A8ASMR5ADBSW4SWP066RZ',\n    'SP2MDDJF88RW6HSNXT2P30QMWQBDQRT0GT031N9ES',\n    'SP2MGBYR5XYZMKYG8JSY9JZKTW8XAVEWBK1JF3CKV',\n    'SP2MQG70XKAA4JJEAH7TT3WD49PQ7278MF6KBKAYB',\n    'SP2NWGMBV60XJRMTCDBCSE5C6AZWT1RYP1FT192E8',\n    'SP2R5V3KWB8589GTKQMG090XTJ6FS3DMPA51FW5NE',\n    'SP2R5W6WZP7JA5HRMVWKW23081HT346DJ5ZZ7XKX9',\n    'SP2R8C36A8KVBBWYC4ASD6V36S2E9VJ0FXWV2T4CP',\n    'SP2S8CB3STYS096T0DH8RYYWJ7GD182485XP6DRTD',\n    'SP2S9BEQWMJG3HQ3BENRZ53FJ8Z9SXR7JTJ4JFP61',\n    'SP2SGP77FTP6K2TR6P76D6FEY95448SG7RB69WWFA',\n    'SP2TDGJZAGJWFSJAWQN2WBGR0TNEVV4CNWJBZ1SNC',\n    'SP2V54K1P1QV3H5KSBZ9732VRYFNES47ERV1GBSZW',\n    'SP2V9AVJT11RVQYM7G9KWEYHSJP6ANHBMBN47ZSB9',\n    'SP2VA0B2KCABAYRS8KB6HFRD3PHK03K245KZFR7D5',\n    'SP2VFSR9S69GEN8V7007ENAK9G0Y60EDFEF15BH7D',\n    'SP2W0HDFAZJ9V96ERRXMYCPHS7TR5J43GV3WVRNW6',\n    'SP2W4DY4ZEG6FFYGX7W8X11TA59BXHFHEZKF3GH35',\n    'SP2WTPFD0DMEHKZA185CA4F9F8BFB2SDHVAJ3C8JD',\n    'SP2XY8VVH3JX65M8XQXCNVN8T2K4820V28TXYXF47',\n    'SP2Z6NHHAPK2EQX749P3E7Q57W5EBEQQD2C8ND64J',\n    'SP2ZRAWGZXYXRKR4QT6NP56JMETFQNEASHBD0AGZV',\n    'SP2ZSTSSE61NZTRGWVB18MEQ26AMQ0Z7R70Z2ND36',\n    'SP31RCGY1X1TJ1FMEJS19MGPQ3H9YX00XF9Q862FF',\n    'SP31VE6HPV8HW93YZG10S15SGZV3FVRJD33KTVKP8',\n    'SP31WY87X4BNKJ9N39BW4E0KGR17FRJMB3VFF4ETH',\n    'SP33D930AY0ACGATM7SE991YJQDT9HZERCCS9JZCD',\n    'SP33NZPWEK5VJNP0E87NM6WYTCV7ANBY43V77568G',\n    'SP34E2X0SVPDS18SKRR4MJSQ0ZNWFYYVF0AJ3DX53',\n    'SP34GC8SK4TG93SZQ2P9YM9JKFX25YJ3J27RQNMKZ',\n    'SP34Q0WDWGA6EHFXS7Y2JHJ0H9XY4P2KKXMSYJ8JK',\n    'SP36C9KQ8JTF3PFAKWKV13KEQSQSZJDSNYDQQAFSS',\n    'SP36JZA0YQGF0AQHV70QJHHX2CEC7DRGEE9XZ8C4X',\n    'SP37PHFTKBS4KENAQ5YFB8G6G86R2X0ZKTDRVQ2Y1',\n    'SP37PPTXJH6KCBJWGTJMZN4MEV7NZG8Q0ABN1DTAD',\n    'SP37SJ9A2JRQ92YGTC6AK6362YCG31HVFEYJSQM73',\n    'SP380FT3ZSQQKN1CTA81SAF9WPHHZZ3YXM9CPHER5',\n    'SP3878KDYPJC2WHZSHY5N33B379B95W6X5D0TCYMP',\n    'SP38BKTZXG02RYZX1J952AQSQRHHQQMMF56ZWXCSP',\n    'SP38PEYV4JAVBA0E3AY6KJWB5RB9T7T0GK95B2BQZ',\n    'SP39122CXXX9G0A940XJ1M1Y8Y24TT07A2F1JY7CA',\n    'SP39J255HZFVJPBCB2NN72CER1XPJ93M2XJRYZKEX',\n    'SP39JNECYKJ8S8JBF2A1R058K7DRNQ282W5X5VAY7',\n    'SP39RBC1PYD2FAGSP589F7ZZSYBWVSWZQTNCH3FM1',\n    'SP3AQK4YGWEPJX24ZJ2635SQJHYT3XYQE8KNVMWXP',\n    'SP3BB8RW1GWMCAPDDXQ6CX2HJC7KKSFN43Z8QAGAJ',\n    'SP3C08QQD5XPBAHG7DK0MZ4CV228Q0MD0BQKBHKZ4',\n    'SP3C5N5QZCWW2JR0Q48CF26V72GG18Z22ZH6RVQ7E',\n    'SP3C9DTK0WQHF711EADMZ1SAYC5J0D6JKNH7NQTXW',\n    'SP3CBJH1HXYEVF3GMRHSC3F7Y2V3ZY24EFM4FBZMH',\n    'SP3CZJ441MRGANK3AMY9B4Y094V75KTZMA3Z1BJJW',\n    'SP3DQXPBJE50V6MPNJPCF8ZQZPTFW45PRKRPZ0RDJ',\n    'SP3E13ZCYW2ZQQCFN6YEN6NXK56HNFRAY3MJ6PGB0',\n    'SP3EM588P7KEHSJ20Y5Y9TYRJHBHST3TCQ4SSQYTF',\n    'SP3F0JBNR6K9DE26R9N6PTRWMKQ80FDW7TEWDDPSR',\n    'SP3G5AH22FQC5TX8N7GYMZRBVXZ4198402ZWE6FG8',\n    'SP3G5PYB0NJNS1DGCXQ438F1A7HVAXNRYZTAY8XTY',\n    'SP3HVG0704NNCN0DHYJ0SFHE87XPJWMVTXG4B30BD',\n    'SP3HYJAVJVBPJGK6W84YTQWFBBM0MN4YAH3HG54YX',\n    'SP3JG25CPVAE1119AKPD2MD2YVFE5WGPX60EZ3D21',\n    'SP3JGAN3WPH64ZMNSB8DC1E8RMZS043W4Y3KGWJFW',\n    'SP3K736DGG3FTMBXYRDX1XJAFZH106ZM0DPB703TY',\n    'SP3KGJHCN8V9YBXX0AGNN7RH4H4KSAN4NR2BRQRX9',\n    'SP3M7K8GEZ8FCDW922R6P7YZYFMD7C4HJJ5K0R4D3',\n    'SP3N28J0GJXN91GMJB1X7EWBRX977S6N7XC5EFMG5',\n    'SP3N66YX3QECQDPKKY2D15T0DNSSVW4TRY0H79EWY',\n    'SP3NYWC8VD73RCF5XPBDYZ8REHTSTRJSC4ZC50TS2',\n    'SP3P23KESVHSRXX73RXTM2VV1KJY4434KAC0J8NSH',\n    'SP3QTDQ6ENKKYB6VP1EQ98P277V96669S0QQ2K32E',\n    'SP3R6JQPJMGNZ49YWB4ZCD9T4SQZCSTQF0YYN8XF1',\n    'SP3RVD6FMPEWN79JA3ZXA2XG8NHB12YEVGCDXB9GX',\n    'SP3S6218VZJ64KRE8ZVWGB2DWTNY2YF2998G2VTCR',\n    'SP3TYHM2T0CEJ7DH0G19SJNHE7J4ADVAF6DGXHQN',\n    'SP3V7QAMNVSP8G42ETZ6MB1A4C1ZZ60FYGS341HPC',\n    'SP3VBME5VPZJ16G7KFA2VFTNHD7924RNE4G4J46ZZ',\n    'SP3W1A04QMJN64CEXA7YQJ3Z0HQKYAD7PZPVFXQ5B',\n    'SP3W5F6NAPY2PX8J6REW530BXE63R4S0BNPY06QJ8',\n    'SP3WN3C0HQNVS70AWXFGW7QSDXRJBCR39W04D79V4',\n    'SP3X0Q1CKTJXXW8ARX5GAHE0SVD7D17KTBAYKENHC',\n    'SP3X91TZJ7KK9JZF4Y9GY8TK416YB501PW0DYTN0W',\n    'SP3YXTCXE1T49B72CAFF6192QF2J2TR3E24YMWQKP',\n    'SP3ZQXZ6MZD3FPPFTQ9V04P715572SCKXF78XGGBH',\n    'SP4G8XQYESG0S50TS60NW5XMBS408ZWNJQZZ8YFV',\n    'SP65TF2CPDY6WQ9FJM7KJK7862DWXMAXAF452YZG',\n    'SP6ZSYZ9F28C80KW9QGASQ8SQY4K0RFVRM5YM2C4',\n    'SP79JMAGQVWMVWRXG2AE5GF8Z27VF1W4KZ3J03WG',\n    'SP79YX144B1ATGCT64CX3S4KWRNPWP2GTZ0E2W52',\n    'SP7VNC3QJQD446ZRZF2K9TRWE02YFZ2VYM5VRH3H',\n    'SP7ZFQWWHTVKTE34XC2NYHP8M4Y81P16YVP596RD',\n    'SP8ANKJ57KH74WX7WJ50EDSGEM73P1AMB8ERB8E0',\n    'SP8HNZBEEB72CWPXJHHRTWFS8PXATHK67ZT7Y7QA',\n    'SP92C75TCAQ6G940GCR024ZEW53MV35DSKR9328B',\n    'SP95KMAB3Y1MXDJMHP7ZA6WSKA9M1XSJQZ2VRDJJ',\n    'SPADCG71NGRGY0ZG6NV0VV3AWCCBSPGK6AY9HKHZ',\n    'SPAF8MV9S2W718QMAJ2WKT10R3VEZ5X6CT9ZV591',\n    'SPB24SCJC8HYWWWECG35RCFFH8CJ6XTD937PEZ5D',\n    'SPBBCE9BXRQ79Q3BBFJC5JM7WN0HH7FYYH6APFQ2',\n    'SPCQJHKAEDC6MHFT2V5HCSF9PSXSK0H4MJ46TTBW',\n    'SPD63E5WQMR9B2ART8M8HADE7WCW99B12EPSR91F',\n    'SPDHP2V80W5HFEFPMB04W9TJT54WF7JXDA4BPGX0',\n    'SPDMT7JY32FDEG7Q5WKJ5VG1MQMK32NZAG37E4MP',\n    'SPDPK90G0EY4ADP5P5Y1Z9MTZPASQZJ8VMVAGKA3',\n    'SPE3RJ12X2SEW1JEDM86E061TKE1A7WK4MNF51HE',\n    'SPEJ62RX5K168230D86XS24BB1ZB0XYZC9075Z8X',\n    'SPEN8FV6KGHYHN4VPZQSHRHVG7AKGXPY5GQYSFEZ',\n    'SPGJRZJ6X49Q5X8NNQEYDMFAK9DYKPEJZB465QSR',\n    'SPGQYHH67ANXHGV9NEF6H77Y1905T0NJSXXS7AQG',\n    'SPGR13361HQZAFMJXH68QEJMYF5X6XPQS5Z07CPR',\n    'SPH55PT9NCAWFX8A2J4BRNCCE7M5H5D1R5J67TPV',\n    'SPHBYY7924D6PWN6V9CTRG6N0841KKYXTMSMXDE9',\n    'SPHQWKF9P6F8WSB4ND472Y3JZ00B5PDEV08ZKJPG',\n    'SPHTWPGNH6Q9KX04K42PGR6XQD1FTJR4Q5FWKMK9',\n    'SPHXTH74K0CA558J1D9DZJ1YJ8SCH3T4C7J1F45G',\n    'SPJYE321XPCZ73EKM5GHZGC5ACBPS4KHGB4E4GGJ',\n    'SPN0JJGCSQH7E8CFFJVXQPPK5JRCE4AW4VHXWH7Q',\n    'SPP0Y3K42J9B578PKCBKW1SS52J48PPATFYH1EQ7',\n    'SPQ77MRW36WA4K26V4AGXYDH42KXTGZ0Z021YQ1G',\n    'SPQ7YDT8P32ZNASZ31C35N9PT6DRJJ4WV9A72AGG',\n    'SPQ8VA0WJ93A8PYPTEQK6TH87E6Z7AXBJWEB7TGD',\n    'SPQGJQNN6MJJVG1EH410ZH2BTF174316ZD651G1X',\n    'SPQTYN6A30ZY70WRRC7FFR5JQ448387C0ZHRKRE6',\n    'SPRSNP97S0V51DCC4HM6PVW2GNDATY3P58R1689N',\n    'SPSVHHZZSE310772B91QFVCJY9CTFTJ7AGT1PN4A',\n    'SPTCAQ1GC5E9T63C3QVW38WZBEMZ6W74PKNVAASS',\n    'SPTKTERHWQ3G4RFRK6YA1ZXNMNM4ET5T1SFE0PDV',\n    'SPVBNHN55AZQEPGJZ8FV46N4ZP6941TYWZM04WG9',\n    'SPVS56JVDJJMJCFCC2A8EWQCF9RDPHXVM6G5SHS1',\n    'SPVX6QNDK0KG2QYPAN4WC2P0MG8SXV0EVQQ8ZEWS',\n    'SPVXWPY3CV52WE3QP6K4KMB0CTR5KHQRCDTW411H',\n    'SPWE4ZR7WHPG80DZ49RBPWMYK9Q8VCJW6PV8XDNQ',\n    'SPXM7BVFGJWYBVEJNBX0ENHFW7KDJNYQAQX9A9YH',\n    'SPXN4THK2N60AC2AWQ4N7NAQ1EMTCESX30X19R76',\n    'SPYJ64M7872D8FB0NDBH01MKV45KN0RXA8SG67XK',\n    'SPYMKCJG1H72TEGNY1ET9JFY2VJKZZ54NBX7BXZ4',\n    'SPZEQ4ZWBMZPTCP3SJ2MDYWEB26A6YZAR6EQANGA',\n    'SPZRHHRX2GA28TJ1BTXDDF3G3WYBVF5D0M5PMCN5',\n    'SPZTJ6XGAQ7VB12JTTPS8ZACFPCG1KDG9ZPTBJD8',\n    'SP1048EY7VW9MKV6CGE4MNAGQGTEKB0DS1W7F7N4H',\n    'SP10QVTFJQF27YJ9QFFSVGBD07ZFCB1XN1EW9M7WC',\n    'SP10Y8P3RXNK32045JA5V7RDY5J7TNCKSGT9TYTZ4',\n    'SP15F5TG1BZ10CC60YVGNJJNRVDK2848KKFF758XV',\n    'SP160TXFF7E884VYFBP58N2N8XYP0ZB9BV6N0160M',\n    'SP186MRS2HQKYGSNZC9519QCD59WGRTHTZ67ET8AD',\n    'SP1933R6G2N0TDY215TBFFA93EVC5A7ZATND5M9XF',\n    'SP19JZ7FSBE6B8AFV44TPH0YDQ32RDZK0YFVEBXYZ',\n    'SP1A9XRECJ93C2120EEGZ4TS9D4N9B3N7CWY8FNSS',\n    'SP1BHMEG20ZEVAH3SG7577EDJJ5S9RXMAQXCGH455',\n    'SP1CM3RBT8MZ4M7R2D58EZ6487MB4025NB8C3VN5W',\n    'SP1CMCMPGC7BR5T80CWKNRB6357RGC7X8XA4F1K33',\n    'SP1F49BMRMJA83VF5ER4A9BBBENWE6NJFS2PTS5F5',\n    'SP1G32VX0G5Z3A67XYQR2VWFJ6DKZ7XGD9QRHFEMJ',\n    'SP1GS8D16PJ373QKPDWN3VJVHAS9N58HCT98F7TZS',\n    'SP1HB7779C8GNDQ4VT7CTN9APSKK48XJ8PJAKTGFT',\n    'SP1JAVCPB9WYCQYXD1R005P1X9ZXFARQCYJNBQE89',\n    'SP1KY2RGKBWTEFBAJWS0SX0P1PHXTXTHB9X528WXX',\n    'SP1ME1TS4Z46T83K4HPQHGV3Q3VX2NF758FFCBWPW',\n    'SP1MMN6JXP0RYHZ762QZGKAQHNQFKVHEBZ9XAM0FP',\n    'SP1PWR60CHQV67E6Y78GZZVTNPYB5EJGZT8JMJTV4',\n    'SP1Q8WYVFN5W2YWAYZWBVW8KABWTGP159NQ6M5KDP',\n    'SP1R17D8PRB38QABDFJHVECSMHNXZMNYG08PDK4NW',\n    'SP1R3G88QNQNYNTXSD1WRJ8K5R10KDPVDYR05096Z',\n    'SP1R7KSGMKEBPJZZ6RV88VEQRWJ2F52W7XTM4ZE4X',\n    'SP1V7NRPKG7XHGNBZ5HGQ42SM90VNF2Y5YXY0RDA7',\n    'SP1VEXZMSMQ93D93W742F2ES4ZGPZX3DNJP8DP9Q9',\n    'SP1X95Y5JVD7KXTQHJF6A2BRGEKY27BH7BWGYJR6D',\n    'SP234PQ03KV02KSJ1338AQVAHXR83QXSTG58W3HPS',\n    'SP2352J7NJSVE840Q193A1TQXYA060YY17MSQBYCD',\n    'SP246HMXWGY3WF7VRZB3E5E2YPTM0ZRXXMFTTVZ5S',\n    'SP27YT7KEJVM3857RCQKCQBHHEEMP0TFEFNC46SY4',\n    'SP287WSB9DMKVWND9JQKZ3H9TY9MSDV9QEQ8SJ3TP',\n    'SP29RR6QP0ND9A732J7HNT1KCH2WG3FY2P7EYY5NJ',\n    'SP2BQ782SESAYXACWCWDYP0Y4YVYVW0FBRQ384XX4',\n    'SP2C7EE8T80AHDCYD1HPZMJJXNMCFXGXDK7ME0M4G',\n    'SP2D0014X0P181GCR07TJ532NFHXN73NF4JZ95TMH',\n    'SP2D71SFBCAX1VE664GKQP2Y7YMRDW6YJGVQVXB1T',\n    'SP2EDRYCPGTS32HZAGWV54RAVA2GTW0WPBP4HGCXR',\n    'SP2F2NYNDDJTAXFB62PJX351DCM4ZNEVRYJSC92CT',\n    'SP2G12HF582SHKYVE5HP5BA1SWG06W572S5E8Z48A',\n    'SP2GYXCMY2VKMDJWN30SHA6BBG6SWZH0E5AP4TFT7',\n    'SP2H0DVKACPTJV3A5ERQ9MQ9MVZSRR0ZQHWFJDGC2',\n    'SP2M7R24J80SZZ34CNQ1SCGFWE3WFF5HRXGRRTGBK',\n    'SP2N2PKM9X9BY9PZVDT9MRT1HQMZFBGNP8JMZ7EKR',\n    'SP2NRHX4WTVTEEC0VSJAZ56GPEK8387WN7Z73B0HT',\n    'SP2NRS6W0F3QZZDXNBPPKEQJ5NBQRV6RF76QA030J',\n    'SP2NV3SGKPRAMHXXSNDGSK0X6Q8C96XNK4BFFSQA2',\n    'SP2P0S3TJZX3EGZP5564XSPFCNADRQVB5ZKCZBWQD',\n    'SP2P8QYQX5PMKVBXQ9FWK8F96J8DJXXW7NB7AA5DT',\n    'SP2V5BZFYCM6BFMANKFENWKTRNK04J42GE8QZMJAM',\n    'SP2W6D4CV6WKXMTTCJ9480KFBXQPHD5RHGBJK7PHM',\n    'SP2ZST2JXM4B79703DJ0N9F3Z2WMG6ZHV76FA50NA',\n    'SP30S5RMTXQWJ9W5XXP2GJ87RGNSBQ7QCPFP35ZAV',\n    'SP31AJM5WD8N9WB3HRCN5M2MA5QB14RF4ZYGEY9D7',\n    'SP325DAYKWK2AST79G24TTJ9E28CBEESGRG9XWCAF',\n    'SP344KKNJ86Q7H592V9VTY4KG2V5QS1CGQFNRP3QZ',\n    'SP36JS5NZVCS1D04ZGRRFFHB9SCDGB6JSJ6RJ3DVZ',\n    'SP37C6HQRQ4GYP1EMEK7KW31HG7G5JNZ5ZPFQMP57',\n    'SP37JRGQ4P7CCW1MVQBD5G4EDDMYB3P23AXR759Z0',\n    'SP38PZX3BKRRTG3950PSHYMJRVZ5PBC9Y57GKYNS8',\n    'SP3910KBW2WAXNDM5VXWGH0JR3JFD245YWM9BA5HE',\n    'SP39GGVC3NVBM9DDZSA79JB0Z3VT4V99701FM3GY6',\n    'SP39K85BYDZ9D34BRBKE60X622MA0JKQAS1NB27S8',\n    'SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR',\n    'SP3CM7FQPGXDH8V23J29QZ025RVR1RBY1BK0BNM82',\n    'SP3CYWDC99E17A7HA65CX6T1HDY9DW6728EXBQHHX',\n    'SP3DBY9K5TMBY6SNS6RHPJEGJWDWQ7PVNM0QBETDQ',\n    'SP3DRKFMS38DN51X5PYJ23VVVJRXYVH4E09J0DAB',\n    'SP3E5ERX12X3J83GG6M8Y36S5J6VKTR3Z3ZZKZS4E',\n    'SP3ENJNNJC3JR0EJQJ7A0P243ZSD1P8JZ8JH2Y2VB',\n    'SP3G2WTTSKNEGZJC6RGS1SBBR65DKKKQ8AY78KRTZ',\n    'SP3HE17BGF7JGZKZEXH2CKTQN94HJK246BA4697KD',\n    'SP3JG2MJG7VW2E5YYNZAFDMKX3QSFQ6JATPJ7MX6A',\n    'SP3JZ4CDBEWNZEA8EXXNWFQ98FQ0VMZS453VJB2TF',\n    'SP3K264JEZ5C3QRZ51GE167G8X520CCV0M7G08PFV',\n    'SP3M5G0HTX7FWZ4ZMX4YQ46XDGS9PVHKY23VP545G',\n    'SP3N1Q8S314HQRZNVY7E4FDESDYXS1NGVDQC63APK',\n    'SP3NFT3HYSABSFX42HMRQ0J6A0FE47X7AXADQCVTM',\n    'SP3PEHCWSEZ6D1M3950ZTY71EK8DAK4A5ZQ0B3DTR',\n    'SP3PGB46DX8M0M679J4Z1AETEGMCK7ZJDYJV7MEM9',\n    'SP3Q3NDMNJAPTY7YH27MBG1NTYND696GDVDW3XRK5',\n    'SP3VY6TRVN6B9ZBH3YC47V0QKG2N7Q4T2QMC2TEH9',\n    'SP3W7P3S6HEHR9ZJ91DZEC683WFYCDACNHVWSAN5K',\n    'SP3WAYE5954JD70844M7Q1WT2KBVY1TEY042X4RBY',\n    'SP3X76KP5BM2RYAQ4XRB0QBTH959MXN2KJ5R0W63K',\n    'SP3XBDJ3GFXM4Z8V9A45CSTA4B6J97XP0XMMCDKZ1',\n    'SP3XMSJSV1TYRP69PAC0751P483QZ3E17R5GTV4CX',\n    'SP3Y32YBHK0M3QNWP0ACA0EVDJYCTPS62W5281SEF',\n    'SP3Z4XXFH7RT69JYKVZWKRZ0TYM8M22ZT1P9HTXX8',\n    'SP3Z8QJH6CVGJ0JK163HZN2N9WYPZGRW1F79KD7B7',\n    'SP3ZJEHK68Y2XB5TRX6ADP17NWRMBEA6KVKD1M0JV',\n    'SP3ZTBD1RZXFZ3JPTC9BWXEVXWV4NTCVDHX15YJET',\n    'SP451EFFVGJ6AWFAQJ135N9G9FE5RWPGXEV7RJ2F',\n    'SP4K41TRAPW02VJHSX5ZFVVG2E7DHDNGX4D8XTPD',\n    'SP936DGKWEEZ6CC100FCSZ18PPG9GCXQMMFBQ79T',\n    'SP9FBRFC028FW65C6CB8ZWQG2C62Z9DVQGX0DPVD',\n    'SPB4APH5MRYWJY4FQH821QTYVDQ80CYHRSXBRJXK',\n    'SPB8AQRQEQBQJACHKA7GRQ2ET0ECMH9ZA263Q7HH',\n    'SPBRMYM12MZKGRBJWBP3VPT845FGXP58041M7H63',\n    'SPFTRJPNBYMARVTGHPMJGANNWGE3RJ1S6KDCXQ0X',\n    'SPFY12M55M6BJ4VRKJ58Q4N9TV0P3MPQG460N0FV',\n    'SPGMF8QX45FMB20TAN8YHNYFMZAQWWAD0X2WNX6F',\n    'SPGQ19RPJ60FD20MRRYJJ5WTPADHACJEGBWTH33M',\n    'SPH3Z6V35EXH7M26HDFW7X6JVK40ET61FJWM7XBQ',\n    'SPHC5BHG1PMB6AKH1CCVS1M7824Y4E01P17CJ4VS',\n    'SPM97MPV98TWEKPXS8X5FTVHXY5CJQC24X30SFJV',\n    'SPPW1RX5YQKVNFXHKWS27RBS1HAVZGH1HX5HWNA2',\n    'SPVNN29HEMCFMF7GRHT0CNFT4XD7TV4ET59C9T5P',\n    'SPW4KNVH5F7MVDFX1DV79DSC0TMWW90J19D6AJ3P',\n    'SPW88YG19W24JK0ZWANM1BM609EMYN00J7EXXP2R',\n    'SPXJ32593DZD5H0EHQJ0JHQ16Z6P9F8GA7AH8NKR',\n    'SPY1BSPJZYBZH3K6QJA3XYS8GQKZDKSFDDQH7ZS5',\n    'SPYCBWGFNH829GDE0F20ZDD30P58YZBJP18Z0ETF',\n    'SPZ7PNAV29ZPTVYM9ZEAC2BY5R3C7P6Y451W8600',\n    'SPZWKC7GN140C3GVPXHW4JXT2CD51HAFQRJ63MNK',\n    'SPZX7DMGEHBBEN7FD7T3FZVS8P7WAYKB04531877',\n]\n","export function Address({ addr }) {\n  return (\n    <span title={addr}>\n      {addr.substr(0, 5)}...{addr.substr(addr.length - 5)}\n    </span>\n  );\n}\n","import { ClarityType, cvToHex, hexToCV, standardPrincipalCV, tupleCV } from '@stacks/transactions';\nimport { NETWORK, smartContractsApi } from './constants';\n\nexport async function fetchDelegationState(ownerStxAddress) {\n  const result = await smartContractsApi.getContractDataMapEntry({\n    contractAddress: 'SP000000000000000000002Q6VF78',\n    contractName: 'pox',\n    mapName: 'delegation-state',\n    key: cvToHex(tupleCV({ stacker: standardPrincipalCV(ownerStxAddress) })),\n    network: NETWORK,\n  });\n\n  console.log(result);\n  const mapEntry = hexToCV(result.data);\n\n  if (mapEntry.type === ClarityType.OptionalNone) {\n    return { state: undefined };\n  } else {\n    return { state: mapEntry.value };\n  }\n}\n","export function Amount({ ustx, className }) {\n  if (typeof ustx !== \"bigint\") {\n    return ustx;\n  }\n  return (\n    <span className={className}>\n      {(ustx / 1000000n).toLocaleString(undefined, {\n        style: 'decimal',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      })}\n      Ӿ\n    </span>\n  );\n}\n","import { cvToString } from '@stacks/transactions';\nimport React from 'react';\nimport { Amount } from './Amount';\nexport function DelegationState({ delegationState }) {\n  return delegationState ? (\n    delegationState.state ? (\n      <>\n        You have joined the pool {cvToString(delegationState.state.data['delegated-to'])} with{' '}\n        <Amount ustx={delegationState.state.data['amount-ustx'].value} />.\n      </>\n    ) : (\n      <>\n        You are not delegating to any pool. Join now{' '}\n        <a href=\"https://stacks-pool-registry.pages.dev\">here</a>.\n      </>\n    )\n  ) : null;\n}\n","import React from 'react';\nimport { Amount } from './Amount';\n\nexport function StackingStatus({ stackingStatus }) {\n  return stackingStatus ? (\n    stackingStatus.stacked ? (\n      <>\n        You stacked <Amount ustx={stackingStatus.details.amount_microstx} /> until cycle #\n        {stackingStatus.details.first_reward_cycle + stackingStatus.details.lock_period}.\n      </>\n    ) : (\n      <>You are currently not stacking.</>\n    )\n  ) : null;\n}\n","import { connectWebSocketClient } from '@stacks/blockchain-api-client';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { chainSuffix, STACKS_API_WS_URL, transactionsApi } from '../lib/constants';\n\nexport function TxStatus({ txId, resultPrefix }) {\n  const [processingResult, setProcessingResult] = useState({ loading: false });\n  const spinner = useRef();\n\n  useEffect(() => {\n    if (!txId) {\n      return;\n    }\n    console.log(txId);\n    spinner.current.classList.remove('d-none');\n    setProcessingResult({ loading: true });\n\n    let sub;\n    const subscribe = async (txId, update) => {\n      try {\n        const client = await connectWebSocketClient(STACKS_API_WS_URL);\n        sub = await client.subscribeTxUpdates(txId, update);\n        console.log({ client, sub });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    subscribe(txId, async event => {\n      console.log(event);\n      let result;\n      if (event.tx_status === 'pending') {\n        return;\n      } else if (event.tx_status === 'success') {\n        const tx = await transactionsApi.getTransactionById({ txId });\n        console.log(tx);\n        result = tx.tx_result;\n      } else if (event.tx_status.startsWith('abort')) {\n        result = undefined;\n      }\n      spinner.current.classList.add('d-none');\n      setProcessingResult({ loading: false, result });\n      await sub.unsubscribe();\n    });\n  }, [txId]);\n\n  if (!txId) {\n    return null;\n  }\n\n  // TODO: remove spinner and websocket connect, leave just the link\n\n  const normalizedTxId = txId.startsWith('0x') ? txId : `0x${txId}`;\n  return (\n    <>\n      {processingResult.loading && (\n        <>\n          Checking transaction status: <br />\n          <a\n            href={`https://explorer.stacks.co/txid/${normalizedTxId}${chainSuffix}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {normalizedTxId.substr(0, 30)}...\n          </a>\n        </>\n      )}\n      {!processingResult.loading && processingResult.result && (\n        <>\n          {resultPrefix}\n          {processingResult.result.repr}\n        </>\n      )}{' '}\n      <div\n        ref={spinner}\n        role=\"status\"\n        className=\"d-none spinner-border spinner-border-sm text-info align-text-top mr-2\"\n      />\n    </>\n  );\n}\n","import { cvToString, PostConditionMode } from '@stacks/connect/node_modules/@stacks/transactions';\nimport { useRef, useState } from 'react';\nimport { paramsFromTx, wasTxMined } from '../lib/btcTransactions';\nimport { useConnect as useStacksJsConnect } from '@stacks/connect-react';\nimport { FPWR_CONTRACT, NETWORK } from '../lib/constants';\nimport { AnchorMode } from '@stacks/transactions';\nimport { TxStatus } from './TxStatus';\n\nexport function SubmitRewardTx({ userSession }) {\n  const { doContractCall } = useStacksJsConnect();\n\n  const txidRef = useRef();\n  const [txid, setTxid] = useState();\n  const [loading, setLoading] = useState(false);\n  const [changed, setChanged] = useState(true);\n\n  const verifyAction = async () => {\n    const btcTxId = txidRef.current.value.trim();\n    const { txCV, proofCV, block, blockCV, headerPartsCV } = await paramsFromTx(btcTxId);\n    console.log({\n      btcTxId,\n      block,\n      proofCV: cvToString(proofCV),\n      blockCV: cvToString(blockCV),\n      txCV: cvToString(txCV),\n    });\n    const results = await Promise.all([wasTxMined(headerPartsCV, txCV, proofCV)]);\n    console.log({ r: results.map(r => cvToString(r)) });\n    setChanged(false);\n  };\n\n  const submitAction = async () => {\n    setLoading(true);\n\n    const btcTxId = txidRef.current.value.trim();\n    const { txPartsCV, proofCV, headerPartsCV } = await paramsFromTx(btcTxId);\n\n    const functionArgs = [\n      // block\n      headerPartsCV,\n      // tx\n      txPartsCV,\n      // proof\n      proofCV,\n    ];\n    try {\n      // submit\n      await doContractCall({\n        contractAddress: FPWR_CONTRACT.address,\n        contractName: FPWR_CONTRACT.name,\n        functionName: 'mint',\n        functionArgs,\n        postConditionMode: PostConditionMode.Deny,\n        postConditions: [],\n        userSession,\n        network: NETWORK,\n        anchorMode: AnchorMode.Any,\n        onCancel: () => {\n          setLoading(false);\n        },\n        onFinish: result => {\n          setLoading(false);\n          setTxid(result.txId);\n        },\n      });\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <input ref={txidRef} model={txid} placeholder=\"0x12345\" />\n      <button\n        className=\"btn btn-outline-primary\"\n        type=\"button\"\n        onClick={changed ? verifyAction : submitAction}\n      >\n        <div\n          role=\"status\"\n          className={`${\n            loading ? '' : 'd-none'\n          } spinner-border spinner-border-sm text-info align-text-top mr-2`}\n        />\n        {changed ? 'Verify' : 'Submit'}\n      </button>\n      {txid && <TxStatus txId={txid} />}\n    </>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport Landing from './pages/Landing';\nimport { Connect } from '@stacks/connect-react';\nimport {\n  FRIEDGER_POOL_HINTS,\n  FRIEDGER_POOL_NFT,\n  NETWORK,\n  smartContractsApi,\n} from './lib/constants';\nimport Auth from './components/Auth';\nimport { userDataState, userSessionState, useConnect } from './lib/auth';\nimport { useAtom } from 'jotai';\nimport { useConnect as useStacksJsConnect } from '@stacks/connect-react';\nimport {\n  callReadOnlyFunction,\n  ClarityType,\n  contractPrincipalCV,\n  cvToHex,\n  cvToString,\n  FungibleConditionCode,\n  hexToCV,\n  makeStandardSTXPostCondition,\n  PostConditionMode,\n  standardPrincipalCV,\n  uintCV,\n} from '@stacks/transactions';\nimport { initialMembers } from './lib/memberlist';\nimport { StackingClient } from '@stacks/stacking';\nimport { Address } from './components/Address';\nimport Jdenticon from 'react-jdenticon';\nimport BN from 'bn.js';\nimport { fetchDelegationState } from './lib/stackingState';\nimport { DelegationState } from './components/DelegationState';\nimport { StackingStatus } from './components/StackingStatus';\nimport { SubmitRewardTx } from './components/SubmitRewardTx';\n\nexport default function App(props) {\n  const { authOptions } = useConnect();\n  const [userSession] = useAtom(userSessionState);\n  const [userData, setUserData] = useAtom(userDataState);\n\n  useEffect(() => {\n    if (userSession?.isUserSignedIn()) {\n      setUserData(userSession.loadUserData());\n    } else if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn();\n    }\n  }, [userSession, setUserData]);\n\n  const stxAddress = userData && userData.profile.stxAddress.mainnet;\n  return (\n    <Connect authOptions={authOptions}>\n      <h1>Members' Area</h1>\n      <div style={{ display: 'flex', justifyContent: 'right' }}>\n        {stxAddress && (\n          <>\n            <div>\n              <Jdenticon size=\"50\" value={stxAddress} />\n            </div>\n            <div>\n              <Address addr={stxAddress} />\n              <br />\n              <Auth userSession={userSession} />\n            </div>\n          </>\n        )}\n      </div>\n      <Content userSession={userSession} />\n    </Connect>\n  );\n}\n\nfunction Content({ userSession }) {\n  const authenticated = userSession && userSession.isUserSignedIn();\n  const userData = authenticated && userSession.loadUserData();\n  const decentralizedID = userData && userData.decentralizedID;\n  const stxOwnerAddress = userData && userData.profile.stxAddress.mainnet;\n  const [status, setStatus] = useState();\n  const [, setTxId] = useState();\n  const [stackingStatus, setStackingStatus] = useState();\n  const [suggestedAmount, setSuggestedAmount] = useState(10);\n  const [currentReceiver, setCurrentReceiver] = useState();\n  const [claimableNftOwner, setClaimableNftOwner] = useState();\n  const [delegationState, setDelegationState] = useState();\n  const amountRef = useRef();\n  const receiverRef = useRef();\n\n  const { doContractCall } = useStacksJsConnect();\n  const claimableNftIndex = initialMembers.findIndex(m => m === stxOwnerAddress);\n\n  useEffect(() => {\n    if (stxOwnerAddress) {\n      const client = new StackingClient(stxOwnerAddress, NETWORK);\n      client.getStatus().then(s => {\n        setStackingStatus(s);\n        if (s.stacked) {\n          setSuggestedAmount(Math.max(10, Math.floor(s.details.amount_microstx / 2_000_000_000))); // 0.5% * 2 * 5%\n        }\n      });\n      fetchDelegationState(stxOwnerAddress).then(result => {\n        setDelegationState(result);\n      });\n      if (claimableNftIndex >= 0) {\n        callReadOnlyFunction({\n          contractAddress: FRIEDGER_POOL_NFT.address,\n          contractName: FRIEDGER_POOL_NFT.name,\n          functionName: 'get-owner',\n          functionArgs: [uintCV(claimableNftIndex)],\n        }).then(getOwnerResult => {\n          // result is always ResponseOk\n          // and response value type is (optional principal)\n          if (getOwnerResult.value.type === ClarityType.OptionalSome) {\n            setClaimableNftOwner(cvToString(getOwnerResult.value.value));\n          }\n        });\n      }\n      smartContractsApi\n        .getContractDataMapEntry({\n          contractAddress: FRIEDGER_POOL_HINTS.address,\n          contractName: FRIEDGER_POOL_HINTS.name,\n          mapName: 'payout-map',\n          key: cvToHex(standardPrincipalCV(stxOwnerAddress)),\n        })\n        .then(response => {\n          console.log(response);\n          if (response.data !== '0x09') {\n            const cv = hexToCV(response.data);\n            setCurrentReceiver(cvToString(cv.value));\n          }\n        });\n    }\n  }, [stxOwnerAddress, claimableNftIndex]);\n\n  const claimNFT = async () => {\n    try {\n      setStatus(`Sending transaction`);\n      const amount = parseInt(amountRef.current.value.trim());\n      await doContractCall({\n        contractAddress: FRIEDGER_POOL_NFT.address,\n        contractName: FRIEDGER_POOL_NFT.name,\n        functionName: 'claim',\n        functionArgs: [uintCV(amount)],\n        postConditionMode: PostConditionMode.Deny,\n        postConditions: [\n          makeStandardSTXPostCondition(\n            stxOwnerAddress,\n            FungibleConditionCode.Equal,\n            new BN(amount * 1000000)\n          ),\n        ],\n        userSession,\n        network: NETWORK,\n        finished: data => {\n          console.log(data);\n          setStatus(undefined);\n          setTxId(data.txId);\n        },\n      });\n    } catch (e) {\n      console.log(e);\n      setStatus(e.toString());\n    }\n  };\n\n  const changeRewardReceiver = async () => {\n    try {\n      setStatus(`Sending transaction`);\n      const receiver = receiverRef.current.value.trim();\n      if (!receiver) {\n        setStatus('Enter receiver of your rewards');\n        return;\n      }\n      const receiverParts = receiver.split('.');\n      const receiverCV =\n        receiverParts.length === 1\n          ? standardPrincipalCV(receiverParts[0])\n          : contractPrincipalCV(receiverParts[0], receiverParts[1]);\n      await doContractCall({\n        contractAddress: FRIEDGER_POOL_HINTS.address,\n        contractName: FRIEDGER_POOL_HINTS.name,\n        functionName: 'set-payout-recipient',\n        functionArgs: [receiverCV],\n        postConditionMode: PostConditionMode.Deny,\n        postConditions: [],\n        userSession,\n        network: NETWORK,\n        finished: data => {\n          console.log(data);\n          setStatus(undefined);\n          setTxId(data.txId);\n        },\n      });\n    } catch (e) {\n      console.log(e);\n      setStatus(e.toString());\n    }\n  };\n\n  return (\n    <>\n      {!authenticated && <Landing />}\n      {decentralizedID && (\n        <>\n          <section>\n            <h4>Your Membership</h4>\n            <StackingStatus stackingStatus={stackingStatus} />\n            <br />\n            <DelegationState delegationState={delegationState} />\n            <br />\n            <h4>Friedger Pool NFT</h4>\n            <img width=\"150px\" src=\"/nft-preview.webp\" alt=\"\" />\n            <br />\n            {!claimableNftOwner && claimableNftIndex >= 0 && (\n              <>\n                Pay what you want (to Friedger in STX)\n                <div>\n                  <input\n                    ref={amountRef}\n                    defaultValue={suggestedAmount}\n                    placeholder={`${suggestedAmount} STX`}\n                  />\n                  <button className=\"btn btn-outline-primary\" type=\"button\" onClick={claimNFT}>\n                    Claim and Pay\n                  </button>\n                </div>\n              </>\n            )}\n            {claimableNftOwner && (\n              <>\n                Your Friedger Pool NFT is owned by{' '}\n                {claimableNftOwner === stxOwnerAddress ? 'you' : claimableNftOwner}.\n              </>\n            )}\n            {claimableNftIndex < 0 && (\n              <>Only pool members of cycle #3 and #4 are eligible to claim the Friedger Pool NFT.</>\n            )}\n            <h4>Change reward receiver</h4>\n            Where should the pool admin send your rewards to? <br />\n            Enter a Stacks address:\n            <div>\n              <input ref={receiverRef} model={currentReceiver} placeholder=\"SP1234..\" />\n              <button\n                className=\"btn btn-outline-primary\"\n                type=\"button\"\n                onClick={changeRewardReceiver}\n              >\n                Submit\n              </button>\n            </div>\n            <h4>Submit Bitcoin reward transaction</h4>\n            For on-chain auditing, we are minting wrapped BTC reward tokens that represent the\n            Bitcoin rewards. The total of reward tokens will determine the total of payout in the\n            future. For now, this is only to help you auditing the pool. <br />\n            The Bitcoin transaction must contain be a reward transaction for our Bitcoin reward\n            address{' '}\n            <a\n              href=\"https://mempool.space/address/33WSGLeVoEpuZDjB54HKZ1y5YsERELoVNq\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              33WSGLeVoEpuZDjB54HKZ1y5YsERELoVNq\n            </a>\n            .<br />\n            Before submitting a tx please make sure that it wasn't submitted before.\n            <div>\n              <SubmitRewardTx />\n            </div>\n            {status && <div>{status}</div>}\n          </section>\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n// Require Sass file so webpack can build it\n\nReactDOM.render(<App />, document.getElementById('react'));\n"],"sourceRoot":""}